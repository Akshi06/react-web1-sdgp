{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94779\\\\wqm-web-react1\\\\src\\\\components\\\\Services\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport './slyde.css';\nimport { ServiceWrper } from './ServiceElements';\nimport { Textwrper2 } from './ServiceElements';\nimport { Heading } from './ServiceElements';\nimport { Subtitle } from './ServiceElements';\nimport { ServiceContainer } from './ServiceElements';\nimport TeamSlider from '../Slider01Team/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Services = () => {\n  _s();\n\n  const [state, setState] = useState({\n    isLoaded: false,\n    ph: \"0\",\n    tr: \"0\",\n    temp: \"0\"\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ServiceContainer, {\n      id: \"discover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Present Quality Of Water\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ServiceWrper, {\n        children: [/*#__PURE__*/_jsxDEV(TeamSlider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Textwrper2, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Values\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: e => {\n              let xhr = new XMLHttpRequest();\n              setState({\n                ph: \"Loading...\"\n              });\n              fetch(\"http://waterqualityapp.herokuapp.com/api/device/?api_key=95d465b00e9946199553186c4b5d294e&device_id=1\").then(res => res.json()).then(result => {\n                this.setState({\n                  isLoaded: true,\n                  ph: result.value['ph value']\n                });\n              }, // Note: it's important to handle errors here\n              // instead of a catch() block so that we don't swallow\n              // exceptions from actual bugs in components.\n              error => {\n                this.setState({\n                  isLoaded: true,\n                  error\n                });\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"1\",\n              children: \"Bolgoda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"2\",\n              children: \"Kelaniya\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: [\"pH - \", state.ph, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: [\"Turbidity - \", state.tr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: [\"Temperature - \", state.temp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Services, \"USU0HteM5ZwsHVK39v9wZaD5BJA=\");\n\n_c = Services;\nexport default Services;\n\nvar _c;\n\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"sources":["C:/Users/94779/wqm-web-react1/src/components/Services/index.js"],"names":["React","Fragment","useState","ServiceWrper","Textwrper2","Heading","Subtitle","ServiceContainer","TeamSlider","Services","state","setState","isLoaded","ph","tr","temp","e","xhr","XMLHttpRequest","fetch","then","res","json","result","value","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAO,aAAP;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC;AAC/BU,IAAAA,QAAQ,EAAC,KADsB;AAE/BC,IAAAA,EAAE,EAAE,GAF2B;AAG/BC,IAAAA,EAAE,EAAE,GAH2B;AAI/BC,IAAAA,IAAI,EAAE;AAJyB,GAAD,CAAlC;AAOA,sBACI,QAAC,QAAD;AAAA,2BACI,QAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,YAAD;AAAA,gCACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA,kCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,QAAQ,EAAGC,CAAD,IAAO;AAErB,kBAAIC,GAAG,GAAG,IAAIC,cAAJ,EAAV;AACAP,cAAAA,QAAQ,CAAC;AACLE,gBAAAA,EAAE,EAAE;AADC,eAAD,CAAR;AAIAM,cAAAA,KAAK,CAAC,uGAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAGSG,MAAD,IAAY;AACR,qBAAKZ,QAAL,CAAc;AACVC,kBAAAA,QAAQ,EAAE,IADA;AAEVC,kBAAAA,EAAE,EAAEU,MAAM,CAACC,KAAP,CAAa,UAAb;AAFM,iBAAd;AAIH,eART,EASQ;AACA;AACA;AACCC,cAAAA,KAAD,IAAW;AACP,qBAAKd,QAAL,CAAc;AACVC,kBAAAA,QAAQ,EAAE,IADA;AAEVa,kBAAAA;AAFU,iBAAd;AAIH,eAjBT;AAoBH,aA3BD;AAAA,oCA4BI;AAAQ,cAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA5BJ,eA6BI;AAAQ,cAAA,IAAI,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA7BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAiCI,QAAC,QAAD;AAAA,gCAAgBf,KAAK,CAACG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCJ,eAkCI,QAAC,QAAD;AAAA,uCAAuBH,KAAK,CAACI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlCJ,eAmCI,QAAC,QAAD;AAAA,yCAAyBJ,KAAK,CAACK,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgDH,CAxDD;;GAAMN,Q;;KAAAA,Q;AA0DN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useState } from 'react'\r\nimport './slyde.css';\r\nimport { ServiceWrper } from './ServiceElements'\r\nimport { Textwrper2 } from './ServiceElements'\r\nimport { Heading } from './ServiceElements'\r\nimport { Subtitle } from './ServiceElements'\r\nimport { ServiceContainer } from './ServiceElements';\r\nimport TeamSlider from '../Slider01Team/index'\r\n\r\n\r\nconst Services = () => {\r\n    const [state, setState] = useState({\r\n        isLoaded:false,\r\n        ph: \"0\",\r\n        tr: \"0\",\r\n        temp: \"0\"\r\n    });\r\n\r\n    return (\r\n        <Fragment>\r\n            <ServiceContainer id='discover'>\r\n                <h1>Present Quality Of Water</h1>\r\n                <ServiceWrper>\r\n                    <TeamSlider />\r\n                    <Textwrper2>\r\n                        <Heading>Values</Heading>\r\n                        <select onChange={(e) => {\r\n\r\n                            let xhr = new XMLHttpRequest();\r\n                            setState({\r\n                                ph: \"Loading...\"\r\n                            })\r\n                           \r\n                            fetch(\"http://waterqualityapp.herokuapp.com/api/device/?api_key=95d465b00e9946199553186c4b5d294e&device_id=1\")\r\n                                .then(res => res.json())\r\n                                .then(\r\n                                    (result) => {\r\n                                        this.setState({\r\n                                            isLoaded: true,\r\n                                            ph: result.value['ph value'],\r\n                                        });\r\n                                    },\r\n                                    // Note: it's important to handle errors here\r\n                                    // instead of a catch() block so that we don't swallow\r\n                                    // exceptions from actual bugs in components.\r\n                                    (error) => {\r\n                                        this.setState({\r\n                                            isLoaded: true,\r\n                                            error\r\n                                        });\r\n                                    }\r\n                                )\r\n\r\n                        }}>\r\n                            <option name='1'>Bolgoda</option>\r\n                            <option name='2'>Kelaniya</option>\r\n                        </select>\r\n                        <Subtitle>pH - {state.ph} </Subtitle>\r\n                        <Subtitle>Turbidity - {state.tr}</Subtitle>\r\n                        <Subtitle>Temperature - {state.temp}</Subtitle>\r\n                    </Textwrper2>\r\n                </ServiceWrper>\r\n            </ServiceContainer>\r\n        </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default Services"]},"metadata":{},"sourceType":"module"}