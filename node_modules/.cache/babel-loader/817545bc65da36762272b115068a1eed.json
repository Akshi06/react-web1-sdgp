{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94779\\\\wqm-web-react1\\\\src\\\\components\\\\TeamSection\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import { Button } from 'react-scroll';\n\nimport Video from '../../Videos/TeamVB.mp4'; // import {Button} from '../ButtonElement';\n\nimport { TemaContainer, VdoBG, TeamBG, TeamContent, TeamH1, TeamP // ButtonWrper,\n// ArrowForward,\n// ArrowRight\n} from './TeamElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Team = () => {\n  _s();\n\n  const [index, setIndex] = React.useState(0);\n  const timeOut = React.useRef(null);\n\n  function resetTimeOut() {\n    if (timeOut.current) {\n      clearTimeout(timeOut.current);\n    }\n  }\n\n  React.useEffect(() => {\n    resetTimeOut();\n    timeOut.current = setTimeout(() => setIndex(prevIndex => prevIndex === Content.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {\n      resetTimeOut();\n    };\n  }, [index]); // const [hover, setHover] = useState(false)\n  // const onHover = () => {\n  //     setHover(!hover)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TemaContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TeamBG, {\n        children: /*#__PURE__*/_jsxDEV(VdoBG, {\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          src: Video,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slideshowsliders\",\n          style: {\n            transform: `translate3d(${-index * 100}%, 0, 0)`\n          },\n          children: Content.map((block, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slide\",\n            style: {\n              block\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: block.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: block.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slideshowdots\",\n          children: Content.map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `slideshowdot ${index === idx ? \"active\" : \"\"}`,\n            onClick: () => {\n              setIndex(idx);\n            }\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Team, \"5jEt9PIQ50Ak1V3DzlsCbRDpzCU=\");\n\n_c = Team;\nexport default Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["C:/Users/94779/wqm-web-react1/src/components/TeamSection/index.js"],"names":["React","Video","TemaContainer","VdoBG","TeamBG","TeamContent","TeamH1","TeamP","Team","index","setIndex","useState","timeOut","useRef","resetTimeOut","current","clearTimeout","useEffect","setTimeout","prevIndex","Content","length","delay","transform","map","block","title","description","_","idx"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,yBAAlB,C,CACA;;AACA,SACIC,aADJ,EAEIC,KAFJ,EAGIC,MAHJ,EAIIC,WAJJ,EAKIC,MALJ,EAMIC,KANJ,CAOI;AACA;AACA;AATJ,OAUO,gBAVP;;;;AAaA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,CAAf,CAA1B;AACA,QAAMC,OAAO,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAhB;;AAEA,WAASC,YAAT,GAAuB;AACnB,QAAGF,OAAO,CAACG,OAAX,EAAmB;AACfC,MAAAA,YAAY,CAACJ,OAAO,CAACG,OAAT,CAAZ;AACH;AACJ;;AAEDf,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClBH,IAAAA,YAAY;AACZF,IAAAA,OAAO,CAACG,OAAR,GAAkBG,UAAU,CAAC,MACzBR,QAAQ,CAAES,SAAD,IACLA,SAAS,KAAKC,OAAO,CAACC,MAAR,GAAiB,CAA/B,GAAmC,CAAnC,GAAuCF,SAAS,GAAG,CAD/C,CADgB,EAIxBG,KAJwB,CAA5B;AAMA,WAAO,MAAM;AAACR,MAAAA,YAAY;AAAI,KAA9B;AAEH,GAVD,EAUE,CAACL,KAAD,CAVF,EAXe,CAuBf;AAEA;AACA;AACA;;AAEA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAA,8BACI,QAAC,MAAD;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,QAAQ,MAAf;AAAgB,UAAA,IAAI,MAApB;AAAqB,UAAA,KAAK,MAA1B;AAA2B,UAAA,GAAG,EAAER,KAAhC;AAAuC,UAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAqBI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAkC,UAAA,KAAK,EAAE;AAACsB,YAAAA,SAAS,EAAE,eAAc,CAACd,KAAD,GAAO,GAAI;AAArC,WAAzC;AAAA,oBACKW,OAAO,CAACI,GAAR,CAAY,CAACC,KAAD,EAAOhB,KAAP,kBACT;AAAK,YAAA,SAAS,EAAC,OAAf;AAAmC,YAAA,KAAK,EAAE;AAACgB,cAAAA;AAAD,aAA1C;AAAA,oCACI;AAAA,wBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAID,KAAK,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAA4BlB,KAA5B;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBACKW,OAAO,CAACI,GAAR,CAAY,CAACI,CAAD,EAAGC,GAAH,kBACT;AACA,YAAA,SAAS,EAAG,gBAAepB,KAAK,KAAKoB,GAAV,GAAgB,QAAhB,GAAyB,EAAG,EADvD;AAEA,YAAA,OAAO,EAAG,MAAM;AACZnB,cAAAA,QAAQ,CAACmB,GAAD,CAAR;AACH;AAJD,aAAUA,GAAV;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AA8CH,CA3ED;;GAAMrB,I;;KAAAA,I;AA6EN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\n// import { Button } from 'react-scroll';\r\nimport Video from '../../Videos/TeamVB.mp4';\r\n// import {Button} from '../ButtonElement';\r\nimport{\r\n    TemaContainer,\r\n    VdoBG,\r\n    TeamBG,\r\n    TeamContent,\r\n    TeamH1,\r\n    TeamP,\r\n    // ButtonWrper,\r\n    // ArrowForward,\r\n    // ArrowRight\r\n} from './TeamElements'\r\n\r\n\r\nconst Team = () => {\r\n\r\n    const [index, setIndex] = React.useState(0);\r\n    const timeOut = React.useRef(null);\r\n\r\n    function resetTimeOut(){\r\n        if(timeOut.current){\r\n            clearTimeout(timeOut.current)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        resetTimeOut();\r\n        timeOut.current = setTimeout(() => \r\n            setIndex((prevIndex) => \r\n                prevIndex === Content.length - 1 ? 0 : prevIndex + 1\r\n            ),\r\n            delay\r\n        );\r\n        return () => {resetTimeOut();};\r\n        \r\n    },[index]);\r\n\r\n    // const [hover, setHover] = useState(false)\r\n\r\n    // const onHover = () => {\r\n    //     setHover(!hover)\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <TemaContainer>\r\n                <TeamBG>\r\n                    <VdoBG autoPlay loop muted src={Video} type='video/mp4'/>\r\n                </TeamBG>\r\n                {/* <TeamContent>\r\n                    <TeamH1>Team Visible</TeamH1>\r\n                    <TeamP>\r\n                        AutoPlay slider\r\n                    </TeamP>\r\n                    {/* <ButtonWrper>\r\n                        <Button \r\n                            to=\"/signin\" \r\n                            onMouseEnter={onHover} \r\n                            onMouseLeave={onHover} \r\n                            primary='true'  \r\n                            dark='true'>\r\n                            Sign In {hover ? <ArrowForward/> : <ArrowRight/>}\r\n                        </Button>\r\n                    </ButtonWrper> */}\r\n                {/* </TeamContent> */}\r\n\r\n                <div className='slideshow'>\r\n                    <div className='slideshowsliders' style={{transform:`translate3d(${-index*100}%, 0, 0)`}}>\r\n                        {Content.map((block,index) => (\r\n                            <div className='slide' key={index} style={{block}}>\r\n                                <h1>{block.title}</h1>\r\n                                <p>{block.description}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className='slideshowdots'>\r\n                        {Content.map((_,idx) => (\r\n                            <div key={idx} \r\n                            className={`slideshowdot ${index === idx ? \"active\":\"\"}`}\r\n                            onClick ={() => {\r\n                                setIndex(idx);\r\n                            }}\r\n                            ></div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </TemaContainer>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Team\r\n"]},"metadata":{},"sourceType":"module"}