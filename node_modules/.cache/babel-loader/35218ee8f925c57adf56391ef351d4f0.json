{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\94779\\\\wqm-web-react1\\\\src\\\\components\\\\Services\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './slyde.css';\nimport { ServiceContainer, ServiceWrper, Heading, Subtitle, Textwrper2 } from './ServiceElements';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Content = [{\n  id: 1,\n  title: 'Turbidity Value',\n  description: 'the maximum level of turbidity in ',\n  description2: 'finished drinking water at 1 NTU and at no time >5 NTU',\n  color: '#00C49F'\n}, {\n  id: 2,\n  title: 'pH Value',\n  description: 'The pH of most drinking-water lies',\n  description2: 'within the range 6.5–8.5.',\n  color: '#FFBB28'\n}];\nconst delay = 3000;\n\nconst Services = () => {\n  _s();\n\n  const [state, setState] = React.useState({\n    index: 0,\n    ph: \"0\",\n    tr: \"0\",\n    temp: \"0\"\n  });\n  const timeOut = React.useRef(null);\n\n  function resetTimeOut() {\n    if (timeOut.current) {\n      clearTimeout(timeOut.current);\n    }\n  }\n\n  React.useEffect(() => {\n    resetTimeOut();\n    timeOut.current = setTimeout(() => {\n      setState(prevIndex => {\n        console.log(prevIndex);\n        return {\n          index: state.index == 1 ? 0 : 1,\n          ph: Math.random()\n        };\n      });\n    }, delay);\n    return () => {\n      resetTimeOut();\n    };\n  }, [state.index]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ServiceContainer, {\n      id: \"discover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Present Quality Of Water\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ServiceWrper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"slideshow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slideshowsliders\",\n            style: {\n              transform: `translate3d(${-state * 100}%, 0, 0)`\n            },\n            children: Content.map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"slide\",\n              style: {\n                color: content.color\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: content.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: content.description2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)]\n            }, content.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Textwrper2, {\n          children: [/*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Values\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"1\",\n              onChange: () => {},\n              children: \"Bolgoda\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              name: \"2\",\n              children: \"Kelaniya\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: [\"pH - \", state.ph, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: [\"Turbidity - \", state.tr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n            children: [\"Temperature - \", state.temp]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Services, \"vR0+JIbNJdmS+GBfL4U68D9zjFQ=\");\n\n_c = Services;\nexport default Services;\n\nvar _c;\n\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"sources":["C:/Users/94779/wqm-web-react1/src/components/Services/index.js"],"names":["React","ServiceContainer","ServiceWrper","Heading","Subtitle","Textwrper2","Content","id","title","description","description2","color","delay","Services","state","setState","useState","index","ph","tr","temp","timeOut","useRef","resetTimeOut","current","clearTimeout","useEffect","setTimeout","prevIndex","console","log","Math","random","transform","map","content"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport './slyde.css';\r\nimport {\r\n    ServiceContainer,\r\n    ServiceWrper,\r\n    Heading,\r\n    Subtitle,\r\n    Textwrper2\r\n    \r\n} from './ServiceElements';\r\n\r\nconst Content = [{\r\n    id:1,\r\n    title: 'Turbidity Value',\r\n    description: 'the maximum level of turbidity in ',\r\n    description2: 'finished drinking water at 1 NTU and at no time >5 NTU',\r\n    color: '#00C49F'\r\n},{\r\n    id:2,\r\n    title: 'pH Value',\r\n    description: 'The pH of most drinking-water lies',\r\n    description2: 'within the range 6.5–8.5.',\r\n    color: '#FFBB28'\r\n}];\r\nconst delay = 3000;\r\n\r\n\r\nconst Services = () => {\r\n\r\n    const [state, setState] = React.useState({\r\n        index:0,\r\n        ph:\"0\",\r\n        tr:\"0\",\r\n        temp:\"0\"\r\n    });\r\n    const timeOut = React.useRef(null);\r\n\r\n\r\n    function resetTimeOut(){\r\n        if(timeOut.current){\r\n            clearTimeout(timeOut.current)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        resetTimeOut();\r\n        timeOut.current = setTimeout(() => \r\n        {\r\n            setState((prevIndex) => {\r\n                console.log(prevIndex)\r\n                return {\r\n                    index:state.index == 1 ? 0 : 1,\r\n                    ph:Math.random()\r\n                }\r\n            });\r\n\r\n        },delay);\r\n\r\n        return () => {resetTimeOut();};\r\n        \r\n    },[state.index]);\r\n\r\n    return (\r\n        <>                   \r\n            <ServiceContainer id='discover'>\r\n                <h1>Present Quality Of Water</h1>\r\n                <ServiceWrper>\r\n                    <div className='slideshow'>\r\n                        <div className='slideshowsliders' style={{transform:`translate3d(${-state*100}%, 0, 0)`}}>\r\n                            {Content.map((content) => (\r\n                                <div className='slide' key={content.id} style={{color:content.color}}>\r\n                                    <h1>{content.title}</h1>\r\n                                    <p>{content.description}</p>\r\n                                    <p>{content.description2}</p>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                        {/* <div className='slideshowdots'>\r\n                            {Content.map((_,idx) => (\r\n                                <div key={idx} \r\n                                className={`slideshowdot ${state === idx ? \"active\":\"\"}`}\r\n                                onClick ={() => {\r\n                                    setState(idx);\r\n                                }}\r\n                                ></div>\r\n                            ))}\r\n                        </div> */}\r\n                    </div>\r\n                    <Textwrper2>\r\n                        <Heading>Values</Heading>\r\n                        <select>\r\n                            <option name='1' onChange={() => {\r\n\r\n\r\n\r\n                            }}>Bolgoda</option>\r\n                            <option name='2'>Kelaniya</option>\r\n                        </select>\r\n                        <Subtitle>pH - {state.ph} </Subtitle>\r\n                        <Subtitle>Turbidity - {state.tr}</Subtitle>\r\n                        <Subtitle>Temperature - {state.temp}</Subtitle>\r\n                    </Textwrper2>\r\n                </ServiceWrper>\r\n            </ServiceContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Services"]},"metadata":{},"sourceType":"module"}